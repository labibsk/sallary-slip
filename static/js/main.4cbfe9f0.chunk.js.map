{"version":3,"sources":["actionTypes.js","actions.js","components/Dates.js","components/EmployeeInfo.js","components/EmployeeId.js","components/SlipFor.js","components/Header.js","components/PaymentInfo.js","components/SalaryBreakdown.js","convertToWords.js","components/Total.js","assets/digital_wolf_logo.png","components/CompanyInfo.js","components/NavBar.js","reducer.js","store.js","save.js","validation.js","firebase.js","assets/word.svg","assets/pdf.svg","generateDoc.js","pdftemplate/layouts.js","pdftemplate/text.js","pdftemplate/Header.js","pdftemplate/tableComponents.js","pdftemplate/BankInfo.js","pdftemplate/DaysInfo.js","pdftemplate/EmployeeInfo.js","pdftemplate/EmployeeName.js","pdftemplate/NetPayable.js","pdftemplate/Note.js","pdftemplate/SalaryBreakDown.js","pdftemplate/Total.js","pdftemplate/SalarySlipTable.js","pdftemplate/SalarySlipPdf.js","components/DownloadPayslipDialog.js","App.js","reportWebVitals.js","index.js"],"names":["DATE","COMPANY_PAN","EMPLOYEE_ID","EMPLOYEE_NAME","DATE_OF_JOINING","HAS_SEPERATED","DATE_OF_SEPERATION","BANK_NAME","BANK_ACCOUNT_NO","MONTHLY_GROSS","MONTHLY_BASIC","DAYS_MONTH","DAYS_PAYABLE","PAN","BASIC","CONVEYANCE_ALLOWANCE","INCENTIVE","INCOME_TAX","ARREARS","EMPLOYEE_IDS","SAVING","SAVING_MESSAGE","EMPLOYEE_INFO","RESET","EMPLOYEE_ID_ERROR","EMPLOYEE_NAME_ERROR","COMPANY_PAN_ERROR","PAN_ERROR","BANK_NAME_ERROR","BANK_ACCOUNT_NO_ERROR","MONTHLY_BASIC_ERROR","MONTHLY_GROSS_ERROR","DAYS_MONTH_ERROR","DAYS_PAYABLE_ERROR","BASIC_ERROR","CONVEYANCE_ALLOWANCE_ERROR","INCENTIVE_ERROR","INCOME_TAX_ERROR","ARREARS_ERROR","updateEmployeeId","value","type","actionTypes","payload","updateEmployeeIdError","updateEmployeeNameError","updateCompanyPanError","updatePanError","updateBankNameError","updateBankAccountNoError","updateMonthlyBasicError","updateMonthlyGrossError","updateDaysMonthError","updateDaysPayableError","updateBasicError","updateConveyanceAllowanceError","updateIncentiveError","updateIncomeTaxError","updateArrearsError","Dates","dateOfJoining","useSelector","state","hasSeperated","dateOfSeperation","dispatch","useDispatch","className","utils","DateFnsUtils","DatePicker","autoOk","variant","inputVariant","margin","id","label","format","onChange","date","KeyboardButtonProps","style","display","height","alignItems","FormControlLabel","control","Checkbox","checked","event","target","name","color","flexGrow","EmployeeInfo","bankName","bankAccountNo","employeeName","employeeNameError","bankNameError","bankAccountNoError","Card","TextField","fullWidth","error","helperText","e","EmployeeId","employeeId","employeeIdError","employeeIds","Autocomplete","freeSolo","disableClearable","options","getOptionLabel","option","newValue","data","pan","parse","Date","monthlyGross","monthlyBasic","basic","conveyanceAllowance","incentive","incomeTax","arrears","renderInput","params","InputProps","SlipFor","views","Header","companyPan","companyPanError","PaymentInfo","daysMonth","daysPayable","daysMonthError","daysPayableError","monthlyBasicError","monthlyGrossError","panError","autoComplete","SalaryBreakdown","ones","tens","teens","convert_millions","num","Math","floor","convert_thousands","convert_hundreds","convert_tens","convert","Total","totalEarnings","parseFloat","toFixed","totalDeductions","convertToWords","CompanyInfo","src","logo","alt","NavBar","visible","isMobile","classes","onSaveClick","Fab","onClick","extendedIcon","today","initial","getFullYear","getMonth","getDate","toString","saving","savingMessage","store","createStore","action","console","log","basicError","conveyanceAllowanceError","incentiveError","incomeTaxError","arrearsError","window","__REDUX_DEVTOOLS_EXTENSION__","getState","length","isFormValid","firebase","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","db","firestore","generateDoc","url","callback","content","zip","PizZip","doc","Docxtemplater","loadZip","setData","render","JSON","stringify","key","Error","Object","getOwnPropertyNames","reduce","properties","errors","Array","errorMessages","map","explanation","join","out","getZip","generate","mimeType","saveAs","fileName","PizZipUtils","getBinaryContent","Border","styled","View","FlexHorizontal","FlexVertical","Font","register","family","fonts","basePath","fontStyle","fontWeight","Text","CompanyName","AddressLine","companyName","addressLine1","addressLine2","addressLine3","width","CompanyAddress","PaySlipTitle","TitleLine","SubTitleLine","TableBorder","Row","Cell","BoldCell","TopCell","BottomCell","EmptyBottomCell","MiddleCell","EmptyMiddleCell","EmptyCell","BankInfo","DaysInfo","EmployeeName","NetPayable","netPayable","netPayableInWords","alignSelf","Note","SalaryBreakDown","SalarySlipTable","SalarySlipPdf","paddingBottom","paddingTop","paddingLeft","paddingRight","DownloadPayslipDialog","open","dateObject","saveToFirebase","collection","set","then","catch","Dialog","Paper","backgroundColor","IconButton","position","right","top","Close","Box","gap","flexDirection","padding","document","textDecoration","justifyContent","blob","loading","pdfLogo","CircularProgress","wordLogo","useStyles","makeStyles","theme","root","spacing","marginRight","App","prevScrollPos","useRef","useState","setVisible","useMediaQuery","getEmployeeIds","onSnapshot","snapshot","ids","docs","useEffect","useLayoutEffect","handleScroll","current","pageYOffset","addEventListener","removeEventListener","bottom","zIndex","transition","transform","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.4cbfe9f0.chunk.js","sourcesContent":["export const DATE = \"DATE\";\r\nexport const COMPANY_PAN = \"COMPANY_PAN\";\r\nexport const EMPLOYEE_ID = \"EMPLOYEE_ID\";\r\nexport const EMPLOYEE_NAME = \"EMPLOYEE_NAME\";\r\nexport const DATE_OF_JOINING = \"DATE_OF_JOINING\";\r\nexport const HAS_SEPERATED = \"HAS_SEPERATED\";\r\nexport const DATE_OF_SEPERATION = \"DATE_OF_SEPERATION\";\r\nexport const BANK_NAME = \"BANK_NAME\";\r\nexport const BANK_ACCOUNT_NO = \"BANK_ACCOUNT_NO\";\r\nexport const MONTHLY_GROSS = \"MONTHLY_GROSS\";\r\nexport const MONTHLY_BASIC = \"MONTHLY_BASIC\";\r\nexport const DAYS_MONTH = \"DAYS_MONTH\";\r\nexport const DAYS_PAYABLE = \"DAYS_PAYABLE\";\r\nexport const PAN = \"PAN\";\r\nexport const BASIC = \"BASIC\";\r\nexport const CONVEYANCE_ALLOWANCE = \"CONVEYANCE_ALLOWANCE\";\r\nexport const INCENTIVE = \"INCENTIVE\";\r\nexport const INCOME_TAX = \"INCOME_TAX\";\r\nexport const ARREARS = \"ARREARS\";\r\nexport const EMPLOYEE_IDS = \"EMPLOYEE_IDS\";\r\nexport const SAVING = \"SAVING\";\r\nexport const SAVING_MESSAGE = \"SAVING_MESSAGE\";\r\n\r\nexport const EMPLOYEE_INFO = \"EMPLOYEE_INFO\";\r\nexport const RESET = \"RESET\";\r\n\r\n// Errors\r\nexport const EMPLOYEE_ID_ERROR = \"EMPLOYEE_ID_ERROR\";\r\nexport const EMPLOYEE_NAME_ERROR = \"EMPLOYEE_NAME_ERROR\";\r\nexport const COMPANY_PAN_ERROR = \"COMPANY_PAN_ERROR\";\r\nexport const PAN_ERROR = \"PAN_ERROR\";\r\nexport const BANK_NAME_ERROR = \"BANK_NAME_ERROR\";\r\nexport const BANK_ACCOUNT_NO_ERROR = \"BANK_ACCOUNT_NO_ERROR\";\r\nexport const MONTHLY_BASIC_ERROR = \"MONTHLY_BASIC_ERROR\";\r\nexport const MONTHLY_GROSS_ERROR = \"MONTHLY_GROSS_ERROR\";\r\nexport const DAYS_MONTH_ERROR = \"DAYS_MONTH_ERROR\";\r\nexport const DAYS_PAYABLE_ERROR = \"DAYS_PAYABLE_ERROR\";\r\nexport const BASIC_ERROR = \"BASIC_ERROR\";\r\nexport const CONVEYANCE_ALLOWANCE_ERROR = \"CONVEYANCE_ALLOWANCE_ERROR\";\r\nexport const INCENTIVE_ERROR = \"INCENTIVE_ERROR\";\r\nexport const INCOME_TAX_ERROR = \"INCOME_TAX_ERROR\";\r\nexport const ARREARS_ERROR = \"ARREARS_ERROR\";","import * as actionTypes from './actionTypes';\r\nimport { parse } from 'date-fns';\r\n\r\nexport function updateDate(value) {\r\n    return {\r\n        type: actionTypes.DATE,\r\n        payload: value\r\n    }\r\n}\r\nexport function updateCompanyPan(value) {\r\n    return {\r\n        type: actionTypes.COMPANY_PAN,\r\n        payload: value\r\n    }\r\n}\r\nexport function updateEmployeeId(value) {\r\n    return {\r\n        type: actionTypes.EMPLOYEE_ID,\r\n        payload: value\r\n    }\r\n}\r\nexport function updateEmployeeName(value) {\r\n    return {\r\n        type: actionTypes.EMPLOYEE_NAME,\r\n        payload: value\r\n    }\r\n}\r\nexport function updateDateOfJoining(value) {\r\n    return {\r\n        type: actionTypes.DATE_OF_JOINING,\r\n        payload: value\r\n    }\r\n}\r\nexport function updateHasSeperated(value) {\r\n    return {\r\n        type: actionTypes.HAS_SEPERATED,\r\n        payload: value\r\n    }\r\n}\r\nexport function updateDateOfSeperation(value) {\r\n    return {\r\n        type: actionTypes.DATE_OF_SEPERATION,\r\n        payload: value\r\n    }\r\n}\r\nexport function updateBankName(value) {\r\n    return {\r\n        type: actionTypes.BANK_NAME,\r\n        payload: value\r\n    }\r\n}\r\nexport function updateBankAccountNo(value) {\r\n    return {\r\n        type: actionTypes.BANK_ACCOUNT_NO,\r\n        payload: value\r\n    }\r\n}\r\nexport function updateMonthlyGross(value) {\r\n    return {\r\n        type: actionTypes.MONTHLY_GROSS,\r\n        payload: value\r\n    }\r\n}\r\nexport function updateMonthlyBasic(value) {\r\n    return {\r\n        type: actionTypes.MONTHLY_BASIC,\r\n        payload: value\r\n    }\r\n}\r\nexport function updateDaysMonth(value) {\r\n    return {\r\n        type: actionTypes.DAYS_MONTH,\r\n        payload: value\r\n    }\r\n}\r\nexport function updateDaysPayable(value) {\r\n    return {\r\n        type: actionTypes.DAYS_PAYABLE,\r\n        payload: value\r\n    }\r\n}\r\nexport function updatePan(value) {\r\n    return {\r\n        type: actionTypes.PAN,\r\n        payload: value\r\n    }\r\n}\r\n\r\nexport function updateBasic(value) {\r\n    return {\r\n        type: actionTypes.BASIC,\r\n        payload: value\r\n    }\r\n}\r\nexport function updateConveyanceAllowance(value) {\r\n    return {\r\n        type: actionTypes.CONVEYANCE_ALLOWANCE,\r\n        payload: value\r\n    }\r\n}\r\nexport function updateIncentive(value) {\r\n    return {\r\n        type: actionTypes.INCENTIVE,\r\n        payload: value\r\n    }\r\n}\r\nexport function updateIncomeTax(value) {\r\n    return {\r\n        type: actionTypes.INCOME_TAX,\r\n        payload: value\r\n    }\r\n}\r\nexport function updateArrears(value) {\r\n    return {\r\n        type: actionTypes.ARREARS,\r\n        payload: value\r\n    }\r\n}\r\n\r\nexport function updateEmployeeIds(value) {\r\n    return {\r\n        type: actionTypes.EMPLOYEE_IDS,\r\n        payload: value\r\n    }\r\n}\r\n\r\n\r\n// Errors\r\nexport function updateEmployeeIdError(value) {\r\n    return {\r\n        type: actionTypes.EMPLOYEE_ID_ERROR,\r\n        payload: value\r\n    }\r\n}\r\n\r\nexport function updateEmployeeNameError(value) {\r\n    return {\r\n        type: actionTypes.EMPLOYEE_NAME_ERROR,\r\n        payload: value\r\n    }\r\n}\r\n\r\nexport function updateCompanyPanError(value) {\r\n    return {\r\n        type: actionTypes.COMPANY_PAN_ERROR,\r\n        payload: value\r\n    }\r\n}\r\n\r\nexport function updatePanError(value) {\r\n    return {\r\n        type: actionTypes.PAN_ERROR,\r\n        payload: value\r\n    }\r\n}\r\n\r\nexport function updateBankNameError(value) {\r\n    return {\r\n        type: actionTypes.BANK_NAME_ERROR,\r\n        payload: value\r\n    }\r\n}\r\n\r\nexport function updateBankAccountNoError(value) {\r\n    return {\r\n        type: actionTypes.BANK_ACCOUNT_NO_ERROR,\r\n        payload: value\r\n    }\r\n}\r\n\r\nexport function updateMonthlyBasicError(value) {\r\n    return {\r\n        type: actionTypes.MONTHLY_BASIC_ERROR,\r\n        payload: value\r\n    }\r\n}\r\n\r\nexport function updateMonthlyGrossError(value) {\r\n    return {\r\n        type: actionTypes.MONTHLY_GROSS_ERROR,\r\n        payload: value\r\n    }\r\n}\r\n\r\nexport function updateDaysMonthError(value) {\r\n    return {\r\n        type: actionTypes.DAYS_MONTH_ERROR,\r\n        payload: value\r\n    }\r\n}\r\n\r\nexport function updateDaysPayableError(value) {\r\n    return {\r\n        type: actionTypes.DAYS_PAYABLE_ERROR,\r\n        payload: value\r\n    }\r\n}\r\n\r\nexport function updateBasicError(value) {\r\n    return {\r\n        type: actionTypes.BASIC_ERROR,\r\n        payload: value\r\n    }\r\n}\r\n\r\nexport function updateConveyanceAllowanceError(value) {\r\n    return {\r\n        type: actionTypes.CONVEYANCE_ALLOWANCE_ERROR,\r\n        payload: value\r\n    }\r\n}\r\n\r\nexport function updateIncentiveError(value) {\r\n    return {\r\n        type: actionTypes.INCENTIVE_ERROR,\r\n        payload: value\r\n    }\r\n}\r\n\r\nexport function updateIncomeTaxError(value) {\r\n    return {\r\n        type: actionTypes.INCOME_TAX_ERROR,\r\n        payload: value\r\n    }\r\n}\r\n\r\nexport function updateArrearsError(value) {\r\n    return {\r\n        type: actionTypes.ARREARS_ERROR,\r\n        payload: value\r\n    }\r\n}\r\n\r\nexport function updateSaving(value) {\r\n    return {\r\n        type: actionTypes.SAVING,\r\n        payload: value\r\n    }\r\n}\r\n\r\nexport function updateSavingMessage(value) {\r\n    return {\r\n        type: actionTypes.SAVING_MESSAGE,\r\n        payload: value\r\n    }\r\n}\r\n\r\nexport function updateEmployeeInfo(data) {\r\n    return {\r\n        type: actionTypes.EMPLOYEE_INFO,\r\n        payload: {\r\n            pan: data.pan,\r\n            employeeName: data.employeeName,\r\n            bankName: data.bankName,\r\n            bankAccountNo: data.bankAccountNo,\r\n            dateOfJoining: parse(data.dateOfJoining, \"dd MMM yyyy\", new Date()),\r\n            hasSeperated: data.dateOfSeperation !== \"N/A\",\r\n            dateOfSeperation: data.dateOfSeperation === \"N/A\" ? new Date() : parse(data.dateOfSeperation, \"dd MMM yyyy\", new Date()),\r\n            monthlyGross: data.monthlyGross,\r\n            monthlyBasic: data.monthlyBasic,\r\n            basic: data.basic,\r\n            conveyanceAllowance: data.conveyanceAllowance,\r\n            incentive: data.incentive,\r\n            incomeTax: data.incomeTax,\r\n            arrears: data.arrears\r\n        }\r\n    }\r\n}\r\n\r\nexport function updateState() {\r\n    return {\r\n        type: \"STATE\"\r\n    }\r\n}\r\n\r\nexport function reset() {\r\n    return {\r\n        type: actionTypes.RESET\r\n    }\r\n}","import React from 'react'\r\nimport { DatePicker, MuiPickersUtilsProvider } from \"@material-ui/pickers\";\r\nimport DateFnsUtils from '@date-io/date-fns';\r\nimport './Dates.css'\r\nimport Checkbox from '@material-ui/core/Checkbox';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { updateDateOfJoining, updateDateOfSeperation, updateHasSeperated } from '../actions';\r\n\r\nfunction Dates() {\r\n\r\n    const dateOfJoining = useSelector(state => state.dateOfJoining);\r\n    const hasSeperated = useSelector(state => state.hasSeperated);\r\n    const dateOfSeperation = useSelector(state => state.dateOfSeperation);\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    return (\r\n        <div className=\"Dates\">\r\n            <MuiPickersUtilsProvider utils={DateFnsUtils}>\r\n\r\n                <DatePicker\r\n                    autoOk\r\n                    variant=\"inline\"\r\n                    inputVariant=\"outlined\"\r\n                    margin=\"none\"\r\n                    id=\"dateOfJoining\"\r\n                    label=\"Date of Joining\"\r\n                    format=\"MMM, dd yyyy\"\r\n                    value={dateOfJoining}\r\n                    onChange={(date) => dispatch(updateDateOfJoining(date))}\r\n                    KeyboardButtonProps={{\r\n                        'aria-label': 'change date',\r\n                    }}\r\n                />\r\n\r\n                <div style={{ display: 'flex', height: '70px', alignItems: 'center' }}>\r\n                    <FormControlLabel\r\n                        control={\r\n                            <Checkbox\r\n                                checked={hasSeperated}\r\n                                onChange={(event) => dispatch(updateHasSeperated(event.target.checked))}\r\n                                name=\"Seperated\"\r\n                                color=\"primary\"\r\n                            />\r\n                        }\r\n                        label=\"Seperated\"\r\n                    />\r\n                    {hasSeperated &&\r\n                        <DatePicker style={{ flexGrow: '1' }}\r\n                            autoOk\r\n                            variant=\"inline\"\r\n                            inputVariant=\"outlined\"\r\n                            margin=\"none\"\r\n                            id=\"dateOfSeperation\"\r\n                            label=\"Date of Seperation\"\r\n                            format=\"MMM, dd yyyy\"\r\n                            value={dateOfSeperation}\r\n                            onChange={(date) => dispatch(updateDateOfSeperation(date))}\r\n                            KeyboardButtonProps={{\r\n                                'aria-label': 'change date',\r\n                            }}\r\n                        />}\r\n                </div>\r\n            </MuiPickersUtilsProvider>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Dates\r\n","import React from 'react'\r\nimport { Card } from \"@material-ui/core\";\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Dates from './Dates';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { updateBankAccountNo, updateBankName, updateEmployeeName } from '../actions';\r\n\r\nfunction EmployeeInfo() {\r\n\r\n    const bankName = useSelector(state => state.bankName);\r\n    const bankAccountNo = useSelector(state => state.bankAccountNo);\r\n\r\n    const employeeName = useSelector(state => state.employeeName);\r\n    const employeeNameError = useSelector(state => state.employeeNameError);\r\n\r\n    const bankNameError = useSelector(state => state.bankNameError);\r\n    const bankAccountNoError = useSelector(state => state.bankAccountNoError);\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    return (\r\n        <Card className=\"card\">\r\n            <p className=\"title\">Employee Info</p>\r\n            <TextField\r\n                fullWidth={false}\r\n                id=\"employeeName\"\r\n                label=\"Employee name\"\r\n                variant=\"outlined\"\r\n                value={employeeName}\r\n                error={employeeNameError}\r\n                helperText={employeeNameError ? \"Please Enter Employee name\" : \"\"}\r\n                onChange={(e) => dispatch(updateEmployeeName(e.target.value))} />\r\n            <Dates />\r\n            <div className=\"horizontal\">\r\n                <TextField\r\n                    className=\"horizontalItem\"\r\n                    fullWidth={false}\r\n                    id=\"bankName\"\r\n                    label=\"Bank name\"\r\n                    variant=\"outlined\"\r\n                    value={bankName}\r\n                    error={bankNameError}\r\n                    helperText={bankNameError ? \"Please Enter Bank Name\" : \"\"}\r\n                    onChange={(e) => dispatch(updateBankName(e.target.value))} />\r\n                <TextField\r\n                    className=\"horizontalItem\"\r\n                    fullWidth={false}\r\n                    id=\"bankAccountNo\"\r\n                    label=\"Bank A/c No\"\r\n                    variant=\"outlined\"\r\n                    value={bankAccountNo}\r\n                    error={bankAccountNoError}\r\n                    helperText={bankAccountNoError ? \"Please Enter Bank A/c No\" : \"\"}\r\n                    onChange={(e) => dispatch(updateBankAccountNo(e.target.value))} />\r\n            </div>\r\n        </Card>\r\n    )\r\n}\r\n\r\nexport default EmployeeInfo\r\n","import React from 'react'\r\nimport { TextField } from '@material-ui/core';\r\nimport Autocomplete from '@material-ui/lab/Autocomplete';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport {\r\n    updateEmployeeId,\r\n    updateEmployeeInfo\r\n} from '../actions';\r\n\r\nfunction EmployeeId() {\r\n\r\n    const employeeId = useSelector(state => state.employeeId);\r\n    const error = useSelector(state => state.employeeIdError);\r\n    const employeeIds = useSelector(state => state.employeeIds);\r\n    const dispatch = useDispatch();\r\n\r\n    return (\r\n        <Autocomplete\r\n            freeSolo\r\n            id=\"employeeIdAutocomplete\"\r\n            disableClearable\r\n            options={employeeIds}\r\n            getOptionLabel={(option) => option.id}\r\n            onChange={(event, newValue) => {\r\n                dispatch(updateEmployeeId(newValue.id));\r\n                dispatch(updateEmployeeInfo(newValue.data));\r\n            }}\r\n            renderInput={(params) => (\r\n                <TextField\r\n                    {...params}\r\n                    label=\"Employee Id\"\r\n                    margin=\"normal\"\r\n                    variant=\"outlined\"\r\n                    value={employeeId}\r\n                    error={error}\r\n                    helperText={error ? \"Please Enter Employee Id\" : \"\"}\r\n                    onChange={(event) => dispatch(updateEmployeeId(event.target.value))}\r\n                    InputProps={{ ...params.InputProps }}\r\n                />\r\n            )}\r\n        />\r\n\r\n    )\r\n}\r\n\r\nexport default EmployeeId\r\n","import React from 'react'\r\nimport { MuiPickersUtilsProvider, DatePicker } from \"@material-ui/pickers\";\r\nimport DateFnsUtils from \"@date-io/date-fns\";\r\nimport { updateDate } from '../actions';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\n\r\nfunction SlipFor() {\r\n    const date = useSelector(state => state.date);\r\n    const dispatch = useDispatch();\r\n\r\n    return (\r\n        <MuiPickersUtilsProvider utils={DateFnsUtils}>\r\n\r\n            <DatePicker\r\n                autoOk\r\n                views={[\"month\", \"year\"]}\r\n                variant=\"inline\"\r\n                inputVariant=\"outlined\"\r\n                margin=\"none\"\r\n                fullWidth={true}\r\n                id=\"paySlipFor\"\r\n                label=\"Payslip For\"\r\n                value={date}\r\n                onChange={(date) => dispatch(updateDate(date))}\r\n            />\r\n        </MuiPickersUtilsProvider>\r\n    )\r\n}\r\n\r\nexport default SlipFor\r\n","import React from 'react';\r\nimport { Card, TextField } from \"@material-ui/core\";\r\nimport EmployeeId from './EmployeeId';\r\nimport SlipFor from './SlipFor';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { updateCompanyPan } from '../actions';\r\n\r\nfunction Header() {\r\n\r\n    const companyPan = useSelector(state => state.companyPan);\r\n    const error = useSelector(state => state.companyPanError);\r\n    const dispatch = useDispatch();\r\n\r\n    return (\r\n        <Card className=\"card\">\r\n            <div className=\"horizontal\">\r\n                <SlipFor className=\"horizontalItem\" />\r\n\r\n                <TextField\r\n                    className=\"horizontalItem\"\r\n                    id=\"companyPan\"\r\n                    label=\"Company PAN\"\r\n                    variant=\"outlined\"\r\n                    fullWidth={true}\r\n                    value={companyPan}\r\n                    error={error}\r\n                    helperText={error ? \"Please Enter Company PAN\" : \"\"}\r\n                    onChange={(e) => dispatch(updateCompanyPan(e.target.value))} />\r\n            </div>\r\n\r\n            <EmployeeId className=\"employeeId\" />\r\n        </Card>\r\n    )\r\n}\r\n\r\nexport default Header\r\n","import React from 'react'\r\nimport { Card } from \"@material-ui/core\";\r\nimport TextField from '@material-ui/core/TextField';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { updateDaysMonth, updateDaysPayable, updateMonthlyBasic, updateMonthlyGross, updatePan } from '../actions';\r\n\r\nfunction PaymentInfo() {\r\n    const daysMonth = useSelector(state => state.daysMonth);\r\n    const daysPayable = useSelector(state => state.daysPayable);\r\n    const monthlyBasic = useSelector(state => state.monthlyBasic);\r\n    const monthlyGross = useSelector(state => state.monthlyGross);\r\n    const pan = useSelector(state => state.pan);\r\n\r\n    const daysMonthError = useSelector(state => state.daysMonthError);\r\n    const daysPayableError = useSelector(state => state.daysPayableError);\r\n    const monthlyBasicError = useSelector(state => state.monthlyBasicError);\r\n    const monthlyGrossError = useSelector(state => state.monthlyGrossError);\r\n    const panError = useSelector(state => state.panError);\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    return (\r\n        <Card className=\"card\">\r\n            <p className=\"title\">Payment Info</p>\r\n            <div className=\"horizontal\">\r\n                <TextField\r\n                    className=\"horizontalItem\"\r\n                    fullWidth={false}\r\n                    id=\"daysMonth\"\r\n                    label=\"Days Month\"\r\n                    variant=\"outlined\"\r\n                    type=\"number\"\r\n                    autoComplete=\"off\"\r\n                    value={daysMonth}\r\n                    error={daysMonthError}\r\n                    helperText={daysMonthError ? \"Please Enter Days Month\" : \"\"}\r\n                    onChange={(e) => dispatch(updateDaysMonth(e.target.value))} />\r\n                <TextField\r\n                    className=\"horizontalItem\"\r\n                    fullWidth={false}\r\n                    id=\"daysPayable\"\r\n                    label=\"Days Payable\"\r\n                    variant=\"outlined\"\r\n                    type=\"number\"\r\n                    autoComplete=\"off\"\r\n                    value={daysPayable}\r\n                    error={daysPayableError}\r\n                    helperText={daysPayableError ? \"Please Enter Days Payable\" : \"\"}\r\n                    onChange={(e) => dispatch(updateDaysPayable(e.target.value))} />\r\n            </div>\r\n            <div className=\"horizontal\">\r\n                <TextField\r\n                    className=\"horizontalItem\"\r\n                    fullWidth={false}\r\n                    id=\"monthlyBasic\"\r\n                    label=\"Monthly Basic\"\r\n                    variant=\"outlined\"\r\n                    type=\"number\"\r\n                    autoComplete=\"off\"\r\n                    value={monthlyBasic}\r\n                    error={monthlyBasicError}\r\n                    helperText={monthlyBasicError ? \"Please Enter Monthly Basic\" : \"\"}\r\n                    onChange={(e) => dispatch(updateMonthlyBasic(e.target.value))} />\r\n                <TextField\r\n                    className=\"horizontalItem\"\r\n                    fullWidth={false}\r\n                    id=\"monthlyGross\"\r\n                    label=\"Monthly Gross\"\r\n                    variant=\"outlined\"\r\n                    type=\"number\"\r\n                    autoComplete=\"off\"\r\n                    value={monthlyGross}\r\n                    error={monthlyGrossError}\r\n                    helperText={monthlyGrossError ? \"Please Enter Monthly Gross\" : \"\"}\r\n                    onChange={(e) => dispatch(updateMonthlyGross(e.target.value))} />\r\n            </div>\r\n\r\n            <TextField\r\n                id=\"pan\"\r\n                label=\"PAN\"\r\n                variant=\"outlined\"\r\n                value={pan}\r\n                error={panError}\r\n                autoComplete=\"off\"\r\n                helperText={panError ? \"Please Enter PAN\" : \"\"}\r\n                onChange={(e) => dispatch(updatePan(e.target.value))} />\r\n        </Card>\r\n    )\r\n}\r\n\r\nexport default PaymentInfo\r\n","import React from 'react'\r\nimport { Card } from \"@material-ui/core\";\r\nimport TextField from '@material-ui/core/TextField';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { updateArrears, updateBasic, updateConveyanceAllowance, updateIncentive, updateIncomeTax } from '../actions';\r\n\r\nfunction SalaryBreakdown() {\r\n\r\n    const basic = useSelector(state => state.basic);\r\n    const conveyanceAllowance = useSelector(state => state.conveyanceAllowance);\r\n    const incentive = useSelector(state => state.incentive);\r\n    const incomeTax = useSelector(state => state.incomeTax);\r\n    const arrears = useSelector(state => state.arrears);\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    return (\r\n        <Card className=\"card\">\r\n            <p className=\"title\">Salary Breakdown</p>\r\n            <div className=\"horizontal\">\r\n                <TextField\r\n                    className=\"horizontalItem\"\r\n                    fullWidth={false}\r\n                    id=\"basic\"\r\n                    label=\"Basic\"\r\n                    variant=\"outlined\"\r\n                    type=\"number\"\r\n                    autoComplete=\"off\"\r\n                    value={basic}\r\n                    onChange={(e) => dispatch(updateBasic(e.target.value))} />\r\n                <TextField\r\n                    className=\"horizontalItem\"\r\n                    fullWidth={false}\r\n                    id=\"outlined-basic\"\r\n                    label=\"Conveyance Allowance\"\r\n                    variant=\"outlined\"\r\n                    type=\"number\"\r\n                    autoComplete=\"off\"\r\n                    value={conveyanceAllowance}\r\n                    onChange={(e) => dispatch(updateConveyanceAllowance(e.target.value))} />\r\n            </div>\r\n\r\n            <TextField\r\n                id=\"incentive\"\r\n                label=\"Incentive\"\r\n                variant=\"outlined\"\r\n                type=\"number\"\r\n                autoComplete=\"off\"\r\n                value={incentive}\r\n                onChange={(e) => dispatch(updateIncentive(e.target.value))} />\r\n\r\n            <div className=\"horizontal\">\r\n                <TextField\r\n                    className=\"horizontalItem\"\r\n                    fullWidth={false}\r\n                    id=\"incomeTax\"\r\n                    label=\"Income Tax (TDS)\"\r\n                    variant=\"outlined\"\r\n                    type=\"number\"\r\n                    autoComplete=\"off\"\r\n                    value={incomeTax}\r\n                    onChange={(e) => dispatch(updateIncomeTax(e.target.value))} />\r\n                <TextField\r\n                    className=\"horizontalItem\"\r\n                    fullWidth={false}\r\n                    id=\"arrears\"\r\n                    label=\"Arrears\"\r\n                    variant=\"outlined\"\r\n                    type=\"number\"\r\n                    autoComplete=\"off\"\r\n                    value={arrears}\r\n                    onChange={(e) => dispatch(updateArrears(e.target.value))} />\r\n            </div>\r\n        </Card>\r\n    )\r\n}\r\n\r\nexport default SalaryBreakdown\r\n","var ones = ['', 'One', 'Two', 'Three', 'Four', 'Five', 'Six', 'Seven', 'Eight', 'Nine'];\r\nvar tens = ['', '', 'Twenty', 'Thirty', 'Forty', 'Fifty', 'Sixty', 'Seventy', 'Eighty', 'Ninety'];\r\nvar teens = ['Ten', 'Eleven', 'Twelve', 'Thirteen', 'Fourteen', 'Fifteen', 'Sixteen', 'Seventeen', 'Eighteen', 'Nineteen'];\r\n\r\nfunction convert_millions(num) {\r\n    if (num >= 1000000) {\r\n        return convert_millions(Math.floor(num / 1000000)) + \" Million \" + convert_thousands(num % 1000000);\r\n    } else {\r\n        return convert_thousands(num);\r\n    }\r\n}\r\n\r\nfunction convert_thousands(num) {\r\n    if (num >= 1000) {\r\n        return convert_hundreds(Math.floor(num / 1000)) + \" Thousand \" + convert_hundreds(num % 1000);\r\n    } else {\r\n        return convert_hundreds(num);\r\n    }\r\n}\r\n\r\nfunction convert_hundreds(num) {\r\n    if (num > 99) {\r\n        return ones[Math.floor(num / 100)] + \" Hundred \" + convert_tens(num % 100);\r\n    } else {\r\n        return convert_tens(num);\r\n    }\r\n}\r\n\r\nfunction convert_tens(num) {\r\n    if (num < 10) return ones[num];\r\n    else if (num >= 10 && num < 20) return teens[num - 10];\r\n    else {\r\n        return tens[Math.floor(num / 10)] + \" \" + ones[num % 10];\r\n    }\r\n}\r\n\r\nexport default function convert(num) {\r\n    if (num === 0) return \"Zero\";\r\n    else return convert_millions(num);\r\n}","import React from 'react'\r\nimport { Card } from \"@material-ui/core\";\r\nimport convertToWords from '../convertToWords'\r\nimport { useSelector } from 'react-redux';\r\n\r\nfunction Total() {\r\n    const basic = useSelector(state => state.basic);\r\n    const conveyanceAllowance = useSelector(state => state.conveyanceAllowance);\r\n    const incentive = useSelector(state => state.incentive);\r\n    const incomeTax = useSelector(state => state.incomeTax);\r\n    const arrears = useSelector(state => state.arrears);\r\n\r\n    const totalEarnings = ((parseFloat(basic) || 0) + (parseFloat(conveyanceAllowance) || 0) + (parseFloat(incentive) || 0)).toFixed(2)\r\n    const totalDeductions = ((parseFloat(incomeTax) || 0) + (parseFloat(arrears) || 0)).toFixed(2)\r\n    return (\r\n        <Card className=\"card\">\r\n            <div className=\"horizontal\">\r\n                <div className=\"info\">\r\n                    <p className=\"title\">Total Earnings</p>\r\n                    <p className=\"value\">{totalEarnings}</p>\r\n                </div>\r\n\r\n                <div className=\"info\">\r\n                    <p className=\"title\">Total Deductions</p>\r\n                    <p className=\"value\">{totalDeductions}</p>\r\n                </div>\r\n            </div>\r\n\r\n            <div className=\"info\">\r\n                <p className=\"title\">Net Payable</p>\r\n                <p className=\"value\">{totalEarnings - totalDeductions}</p>\r\n                <p className=\"subValue\">Rupees {convertToWords(totalEarnings - totalDeductions)} Only</p>\r\n            </div>\r\n        </Card>\r\n    )\r\n}\r\n\r\nexport default Total\r\n","export default __webpack_public_path__ + \"static/media/digital_wolf_logo.a4b84cc4.png\";","import logo from '../assets/digital_wolf_logo.png'\r\nimport './companyinfo.css'\r\nimport React from 'react'\r\n\r\nconst CompanyInfo = () => {\r\n    return (\r\n        <div className=\"companyInfo\">\r\n            <img src={logo} className=\"logo\" alt=\"Logo\" />\r\n            <div>\r\n                <h3 className=\"name\">EDigital Wolf</h3>\r\n                <p className=\"address\">Shri Siddhi  Above SBI Bank, Sasane Nagar <br />Hadapsar, Pune, Maharashtra 411028</p>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default CompanyInfo;\r\n","import React from 'react'\r\nimport './NavBar.css'\r\nimport Fab from '@material-ui/core/Fab'\r\nimport GetAppIcon from '@material-ui/icons/GetApp';\r\nimport CompanyInfo from './CompanyInfo';\r\n\r\n\r\nfunction NavBar({ visible, isMobile, classes, onSaveClick }) {\r\n\r\n    return (\r\n        <div className={\"NavBar \" + (visible ? \"NavBar__normal\" : \"NavBar__hidden\")}>\r\n            <CompanyInfo />\r\n            {!isMobile && <Fab onClick={onSaveClick} color=\"primary\" variant=\"extended\">\r\n                <GetAppIcon className={classes.extendedIcon} />  Download Payslip\r\n            </Fab>}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default NavBar","import * as actionTypes from './actionTypes';\r\n\r\nfunction monthDays(date) {\r\n    var d = new Date(date.getFullYear(), date.getMonth() + 1, 0);\r\n    return d.getDate();\r\n}\r\n\r\nconst today = new Date();\r\nconst daysMonth = monthDays(today);\r\nconst initial = {\r\n    date: today,\r\n    companyPan: 'AAIFE5015H',\r\n    employeeId: '',\r\n    employeeName: '',\r\n    dateOfJoining: today,\r\n    hasSeperated: false,\r\n    dateOfSeperation: today,\r\n    bankName: '',\r\n    bankAccountNo: '',\r\n    monthlyGross: '',\r\n    monthlyBasic: '',\r\n    daysMonth: daysMonth.toString(),\r\n    daysPayable: '',\r\n    pan: '',\r\n    basic: '',\r\n    conveyanceAllowance: '',\r\n    incentive: '',\r\n    incomeTax: '',\r\n    arrears: '',\r\n    employeeIds: [],\r\n    saving: false,\r\n    savingMessage: 'Saving..'\r\n}\r\n\r\nexport default function reducer(state = initial, action) {\r\n    console.log(\"Reducer called : \", action)\r\n    switch (action.type) {\r\n        case actionTypes.DATE: return { ...state, date: action.payload }\r\n        case actionTypes.COMPANY_PAN: return { ...state, companyPan: action.payload }\r\n        case actionTypes.EMPLOYEE_ID: return { ...state, employeeId: action.payload }\r\n        case actionTypes.EMPLOYEE_NAME: return { ...state, employeeName: action.payload }\r\n        case actionTypes.DATE_OF_JOINING: return { ...state, dateOfJoining: action.payload }\r\n        case actionTypes.HAS_SEPERATED: return { ...state, hasSeperated: action.payload }\r\n        case actionTypes.DATE_OF_SEPERATION: return { ...state, dateOfSeperation: action.payload }\r\n        case actionTypes.BANK_NAME: return { ...state, bankName: action.payload }\r\n        case actionTypes.BANK_ACCOUNT_NO: return { ...state, bankAccountNo: action.payload }\r\n        case actionTypes.MONTHLY_GROSS: return { ...state, monthlyGross: action.payload }\r\n        case actionTypes.MONTHLY_BASIC: return { ...state, monthlyBasic: action.payload }\r\n        case actionTypes.DAYS_MONTH: return { ...state, daysMonth: action.payload }\r\n        case actionTypes.DAYS_PAYABLE: return { ...state, daysPayable: action.payload }\r\n        case actionTypes.PAN: return { ...state, pan: action.payload }\r\n        case actionTypes.BASIC: return { ...state, basic: action.payload }\r\n        case actionTypes.CONVEYANCE_ALLOWANCE: return { ...state, conveyanceAllowance: action.payload }\r\n        case actionTypes.INCENTIVE: return { ...state, incentive: action.payload }\r\n        case actionTypes.INCOME_TAX: return { ...state, incomeTax: action.payload }\r\n        case actionTypes.ARREARS: return { ...state, arrears: action.payload }\r\n        case actionTypes.EMPLOYEE_IDS: return { ...state, employeeIds: action.payload }\r\n        case actionTypes.SAVING: return { ...state, saving: action.payload }\r\n        case actionTypes.SAVING_MESSAGE: return { ...state, savingMessage: action.payload }\r\n\r\n        // Errors\r\n        case actionTypes.EMPLOYEE_ID_ERROR: return { ...state, employeeIdError: action.payload }\r\n        case actionTypes.EMPLOYEE_NAME_ERROR: return { ...state, employeeNameError: action.payload }\r\n        case actionTypes.COMPANY_PAN_ERROR: return { ...state, companyPanError: action.payload }\r\n        case actionTypes.PAN_ERROR: return { ...state, panError: action.payload }\r\n        case actionTypes.BANK_NAME_ERROR: return { ...state, bankNameError: action.payload }\r\n        case actionTypes.BANK_ACCOUNT_NO_ERROR: return { ...state, bankAccountNoError: action.payload }\r\n        case actionTypes.MONTHLY_BASIC_ERROR: return { ...state, monthlyBasicError: action.payload }\r\n        case actionTypes.MONTHLY_GROSS_ERROR: return { ...state, monthlyGrossError: action.payload }\r\n        case actionTypes.DAYS_MONTH_ERROR: return { ...state, daysMonthError: action.payload }\r\n        case actionTypes.DAYS_PAYABLE_ERROR: return { ...state, daysPayableError: action.payload }\r\n        case actionTypes.BASIC_ERROR: return { ...state, basicError: action.payload }\r\n        case actionTypes.CONVEYANCE_ALLOWANCE_ERROR: return { ...state, conveyanceAllowanceError: action.payload }\r\n        case actionTypes.INCENTIVE_ERROR: return { ...state, incentiveError: action.payload }\r\n        case actionTypes.INCOME_TAX_ERROR: return { ...state, incomeTaxError: action.payload }\r\n        case actionTypes.ARREARS_ERROR: return { ...state, arrearsError: action.payload }\r\n        case actionTypes.EMPLOYEE_INFO: return { ...state, ...action.payload }\r\n        case actionTypes.RESET: return { ...initial, employeeIds: state.employeeIds }\r\n\r\n        default: return { ...initial };\r\n    }\r\n}","import { createStore } from 'redux';\r\nimport reducer from './reducer';\r\n\r\nconst store = createStore(\r\n    reducer,\r\n    +  window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__()\r\n);\r\n\r\nexport default store;","import store from './store';\r\nimport {\r\n    updateArrearsError,\r\n    updateSaving\r\n} from './actions';\r\nimport isFormValid from './validation';\r\n\r\nconst onSaveClick = () => {\r\n\r\n    if (!isFormValid(store)) {\r\n        return;\r\n    }\r\n\r\n    store.dispatch(updateArrearsError(false));\r\n    store.dispatch(updateSaving(true));\r\n};\r\n\r\nexport default onSaveClick;","import {\r\n    updateCompanyPanError,\r\n    updateEmployeeIdError,\r\n    updateEmployeeNameError,\r\n    updateBankNameError,\r\n    updateBankAccountNoError,\r\n    updateDaysMonthError,\r\n    updateDaysPayableError,\r\n    updateMonthlyBasicError,\r\n    updateMonthlyGrossError,\r\n    updatePanError,\r\n    updateOpeningError,\r\n    updateEarnedError,\r\n    updateAvailedError,\r\n    updateClosingError,\r\n    updateBasicError,\r\n    updateConveyanceAllowanceError,\r\n    updateIncentiveError,\r\n    updateIncomeTaxError,\r\n    updateArrearsError\r\n} from './actions';\r\n\r\nexport default function isFormValid(store) {\r\n    const state = store.getState();\r\n\r\n    if (state.companyPan.length === 0) {\r\n        store.dispatch(updateCompanyPanError(true));\r\n        return false;\r\n    }\r\n    store.dispatch(updateCompanyPanError(false));\r\n\r\n    if (state.employeeId.length === 0) {\r\n        store.dispatch(updateEmployeeIdError(true));\r\n        return false;\r\n    }\r\n    store.dispatch(updateEmployeeIdError(false));\r\n\r\n    if (state.employeeName.length === 0) {\r\n        store.dispatch(updateEmployeeNameError(true));\r\n        return false;\r\n    }\r\n    store.dispatch(updateEmployeeNameError(false));\r\n\r\n    if (state.bankName.length === 0) {\r\n        store.dispatch(updateBankNameError(true));\r\n        return false;\r\n    }\r\n    store.dispatch(updateBankNameError(false));\r\n\r\n    if (state.bankAccountNo.length === 0) {\r\n        store.dispatch(updateBankAccountNoError(true));\r\n        return false;\r\n    }\r\n    store.dispatch(updateBankAccountNoError(false));\r\n\r\n    if (state.daysMonth.length === 0) {\r\n        store.dispatch(updateDaysMonthError(true));\r\n        return false;\r\n    }\r\n    store.dispatch(updateDaysMonthError(false));\r\n\r\n    if (state.daysPayable.length === 0) {\r\n        store.dispatch(updateDaysPayableError(true));\r\n        return false;\r\n    }\r\n    store.dispatch(updateDaysPayableError(false));\r\n\r\n    if (state.monthlyBasic.length === 0) {\r\n        store.dispatch(updateMonthlyBasicError(true));\r\n        return false;\r\n    }\r\n    store.dispatch(updateMonthlyBasicError(false));\r\n\r\n    if (state.monthlyGross.length === 0) {\r\n        store.dispatch(updateMonthlyGrossError(true));\r\n        return false;\r\n    }\r\n    store.dispatch(updateMonthlyGrossError(false));\r\n\r\n\r\n    if (state.pan.length === 0) {\r\n        store.dispatch(updatePanError(true));\r\n        return false;\r\n    }\r\n    store.dispatch(updatePanError(false));\r\n\r\n    if (state.basic.length === 0) {\r\n        store.dispatch(updateBasicError(true));\r\n        return false;\r\n    }\r\n    store.dispatch(updateBasicError(false));\r\n\r\n    if (state.conveyanceAllowance.length === 0) {\r\n        store.dispatch(updateConveyanceAllowanceError(true));\r\n        return false;\r\n    }\r\n    store.dispatch(updateConveyanceAllowanceError(false));\r\n\r\n    if (state.incentive.length === 0) {\r\n        store.dispatch(updateIncentiveError(true));\r\n        return false;\r\n    }\r\n    store.dispatch(updateIncentiveError(false));\r\n\r\n    if (state.incomeTax.length === 0) {\r\n        store.dispatch(updateIncomeTaxError(true));\r\n        return false;\r\n    }\r\n    store.dispatch(updateIncomeTaxError(false));\r\n\r\n    if (state.arrears.length === 0) {\r\n        store.dispatch(updateArrearsError(true));\r\n        return false;\r\n    }\r\n    return true;\r\n}","import firebase from 'firebase';\r\n\r\nconst firebaseConfig = {\r\n    apiKey: \"AIzaSyBFhJsmdAirbA_kdVrlp5VztQ0mzu0VBv4\",\r\n    authDomain: \"salary-slip-35a4b.firebaseapp.com\",\r\n    projectId: \"salary-slip-35a4b\",\r\n    storageBucket: \"salary-slip-35a4b.appspot.com\",\r\n    messagingSenderId: \"291647738956\",\r\n    appId: \"1:291647738956:web:38883122da95e1f78ed0e9\"\r\n};\r\n// Initialize Firebase\r\nfirebase.initializeApp(firebaseConfig);\r\n\r\nconst db = firebase.firestore();\r\n\r\nexport { db };","export default __webpack_public_path__ + \"static/media/word.baefbedd.svg\";","export default __webpack_public_path__ + \"static/media/pdf.ba4a9de7.svg\";","import Docxtemplater from \"docxtemplater\";\r\nimport PizZip from \"pizzip\";\r\nimport PizZipUtils from \"pizzip/utils/index.js\";\r\nimport { saveAs } from \"file-saver\";\r\nimport store from \"./store\";\r\nimport { updateSavingMessage } from \"./actions\";\r\n\r\nfunction loadFile(url, callback) {\r\n    PizZipUtils.getBinaryContent(url, callback);\r\n}\r\n\r\nconst generateDoc = (data) => {\r\n    loadFile(\"https://labibsk.github.io/sallaryslip/document/template.docx\", function (\r\n        error,\r\n        content\r\n    ) {\r\n        if (error) {\r\n            throw error;\r\n        }\r\n        var zip = new PizZip(content);\r\n        var doc = new Docxtemplater().loadZip(zip);\r\n        doc.setData(data);\r\n        try {\r\n            doc.render();\r\n        } catch (error) {\r\n            function replaceErrors(key, value) {\r\n                if (value instanceof Error) {\r\n                    return Object.getOwnPropertyNames(value).reduce(function (\r\n                        error,\r\n                        key\r\n                    ) {\r\n                        error[key] = value[key];\r\n                        return error;\r\n                    },\r\n                        {});\r\n                }\r\n                return value;\r\n            }\r\n            console.log(JSON.stringify({ error: error }, replaceErrors));\r\n\r\n            if (error.properties && error.properties.errors instanceof Array) {\r\n                const errorMessages = error.properties.errors\r\n                    .map(function (error) {\r\n                        return error.properties.explanation;\r\n                    })\r\n                    .join(\"\\n\");\r\n                console.log(\"errorMessages\", errorMessages);\r\n                // errorMessages is a humanly readable message looking like this :\r\n                // 'The tag beginning with \"foobar\" is unopened'\r\n            }\r\n            throw error;\r\n        }\r\n        var out = doc.getZip().generate({\r\n            type: \"blob\",\r\n            mimeType:\r\n                \"application/vnd.openxmlformats-officedocument.wordprocessingml.document\"\r\n        }); //Output the document using Data-URI\r\n\r\n        saveAs(out, data.fileName + \".docx\");\r\n\r\n        store.dispatch(updateSavingMessage(\"Saving Employee data...\"));\r\n    })\r\n};\r\n\r\nexport default generateDoc;","import styled from '@react-pdf/styled-components'\r\n\r\nexport const Border = styled.View`\r\n        width:100%;\r\n        height:100%;\r\n        border:1px solid #000;\r\n        display:flex;\r\n        padding:16pt;\r\n        flex-direction:column;\r\n`\r\n\r\nexport const FlexHorizontal = styled.View`\r\n        width:100%;\r\n        display:flex;\r\n        flex-direction:row;\r\n`\r\n\r\nexport const FlexVertical = styled.View`\r\n    display:flex;\r\n    flex-direction:column;\r\n`","import styled from '@react-pdf/styled-components'\r\nimport { Font } from '@react-pdf/renderer'\r\n\r\nconst basePath = \"https://ismail-creatvt.github.io/invoicegen/fonts/\"\r\nconst regular = basePath + \"Lora-Regular.ttf\"\r\nconst medium = basePath + \"Lora-Medium.ttf\"\r\nconst bold = basePath + \"Lora-Bold.ttf\"\r\n\r\nFont.register({\r\n        family: 'Lora', fonts: [\r\n                { src: regular, fontStyle: 'normal', fontWeight: 'normal' },\r\n                { src: medium, fontStyle: 'normal', fontWeight: 'medium' },\r\n                { src: bold, fontStyle: 'normal', fontWeight: 'bold' }\r\n        ]\r\n})\r\n\r\nexport const LabelText = styled.Text`\r\n        font-family:'Lora';\r\n        font-size:11pt;\r\n        color:#000;\r\n        font-weight:bold;\r\n`\r\n\r\nexport const CompanyName = styled.Text`\r\n        color:#000;\r\n        font-family:'Lora';\r\n        font-size:14pt;\r\n        font-weight:bold;\r\n        margin-left:8pt;\r\n`\r\nexport const InvoiceTitle = styled.Text`\r\n        color:#000;\r\n        font-family:'Lora';\r\n        font-size:14pt;\r\n        font-weight:bold;\r\n        flex-grow:1;\r\n        margin-top:4pt;\r\n`\r\n\r\nexport const AddressLine = styled.Text`\r\n        color:#000;\r\n        font-family:'Lora';\r\n        font-size:11pt;\r\n        font-weight:normal;\r\n        margin-left:8pt;\r\n`","import { Image } from '@react-pdf/renderer'\r\nimport React from 'react'\r\nimport logo from '../assets/digital_wolf_logo.png'\r\nimport { FlexHorizontal } from './layouts'\r\nimport { CompanyName, AddressLine } from './text'\r\nimport styled from '@react-pdf/styled-components'\r\n\r\nfunction Header({ companyName, addressLine1, addressLine2, addressLine3, date }) {\r\n    return (\r\n        <FlexHorizontal>\r\n            <Image src={logo} style={{ width: '65.05pt', height: '54pt' }} />\r\n            <CompanyAddress>\r\n                <CompanyName>\r\n                    {companyName}\r\n                </CompanyName>\r\n                <AddressLine>\r\n                    {addressLine1}\r\n                </AddressLine>\r\n                <AddressLine>\r\n                    {addressLine2}\r\n                </AddressLine>\r\n                <AddressLine>\r\n                    {addressLine3}\r\n                </AddressLine>\r\n            </CompanyAddress>\r\n            <PaySlipTitle>\r\n                <TitleLine>\r\n                    Pay Slip\r\n                </TitleLine>\r\n                <SubTitleLine>\r\n                    {date}\r\n                </SubTitleLine>\r\n            </PaySlipTitle>\r\n        </FlexHorizontal>\r\n    )\r\n}\r\n\r\nexport default Header\r\n\r\nconst CompanyAddress = styled.View`\r\n    display:flex;\r\n    flex-direction:column;\r\n    flex-grow:1;\r\n`\r\nconst PaySlipTitle = styled.View`\r\n    display:flex;\r\n    flex-direction:column;\r\n    align-items:flex-end;\r\n`\r\nconst TitleLine = styled.Text`\r\n    font-family:'Lora';\r\n    font-size:14pt;\r\n    font-weight:bold;\r\n`\r\nconst SubTitleLine = styled.Text`\r\n    font-family:'Lora';\r\n    font-size:11pt;\r\n    font-weight:bold;\r\n`","import styled from \"@react-pdf/styled-components\"\r\n\r\nexport const TableBorder = styled.View`\r\n    border:0.5pt solid #000;\r\n    width:100%;\r\n    margin-top:20pt;\r\n`\r\n\r\nexport const Row = styled.View`\r\n    display:flex;\r\n    flex-direction:row;\r\n`\r\n\r\nexport const Cell = styled.Text`\r\n    border:0.5pt solid #000;\r\n    padding:4pt 5.4pt 4pt 5.4pt;\r\n    width:128pt;\r\n    font-size:11pt;\r\n    font-family:'Lora';\r\n    box-sizing:border-box;\r\n`\r\nexport const BoldCell = styled.Text`\r\n    border:0.5pt solid #000;\r\n    padding:4pt 5.4pt 4pt 5.4pt;\r\n    width:128pt;\r\n    font-size:11pt;\r\n    font-family:'Lora';\r\n    font-weight:bold;\r\n    box-sizing:border-box;\r\n`\r\n\r\nexport const TopCell = styled.Text`\r\n    border-left:0.5pt solid #000;\r\n    border-right:0.5pt solid #000;\r\n    border-top:0.5pt solid #000;\r\n    padding:4pt 5.4pt 4pt 5.4pt;\r\n    font-size:11pt;\r\n    width:128pt;\r\n    font-family:'Lora';\r\n    box-sizing:border-box;\r\n`\r\nexport const BottomCell = styled.Text`\r\n    border-left:0.5pt solid #000;\r\n    border-right:0.5pt solid #000;\r\n    border-bottom:0.5pt solid #000;\r\n    padding:4pt 5.4pt 4pt 5.4pt;\r\n    font-size:11pt;\r\n    box-sizing:border-box;\r\n    font-family:'Lora';\r\n    width:128pt;\r\n`\r\n\r\nexport const EmptyBottomCell = styled.Text`\r\n    border-left:0.5pt solid #000;\r\n    border-right:0.5pt solid #000;\r\n    border-bottom:0.5pt solid #000;\r\n    padding:4pt 5.4pt 4pt 5.4pt;\r\n    font-size:11pt;\r\n    box-sizing:border-box;\r\n    font-family:'Lora';\r\n    width:128pt;\r\n    height:20pt;\r\n`\r\nexport const MiddleCell = styled.Text`\r\n    border-left:0.5pt solid #000;\r\n    border-right:0.5pt solid #000;\r\n    padding:4pt 5.4pt 4pt 5.4pt;\r\n    font-size:11pt;\r\n    font-family:'Lora';\r\n    width:128pt;\r\n    box-sizing:border-box;\r\n`\r\n\r\n\r\nexport const EmptyMiddleCell = styled.Text`\r\n    border-left:0.5pt solid #000;\r\n    border-right:0.5pt solid #000;\r\n    padding:4pt 5.4pt 4pt 5.4pt;\r\n    height:20pt;\r\n    font-size:11pt;\r\n    font-family:'Lora';\r\n    width:128pt;\r\n    box-sizing:border-box;\r\n`\r\nexport const EmptyCell = styled.View`\r\n    border:0.5pt solid #000;\r\n    height:28pt;\r\n    width:128pt;\r\n    box-sizing:border-box;\r\n`","import React from 'react'\r\nimport { FlexVertical } from './layouts'\r\nimport { Row, MiddleCell, BottomCell } from \"./tableComponents\"\r\n\r\nfunction BankInfo({ bankName, bankAccountNo, pan }) {\r\n    return (\r\n        <FlexVertical>\r\n            <Row>\r\n                <MiddleCell>Bank Name</MiddleCell>\r\n                <MiddleCell>{bankName}</MiddleCell>\r\n                <MiddleCell>PAN</MiddleCell>\r\n                <MiddleCell>{pan}</MiddleCell>\r\n            </Row>\r\n            <Row>\r\n                <BottomCell>Bank A/c No</BottomCell>\r\n                <BottomCell>{bankAccountNo}</BottomCell>\r\n                <BottomCell />\r\n                <BottomCell />\r\n            </Row>\r\n        </FlexVertical>\r\n    )\r\n}\r\n\r\nexport default BankInfo\r\n","import React from 'react'\r\nimport { FlexVertical } from './layouts'\r\nimport { Row, MiddleCell } from \"./tableComponents\"\r\n\r\nfunction DaysInfo({ dateOfJoining, dateOfSeperation, daysMonth, daysPayable }) {\r\n    return (\r\n        <FlexVertical>\r\n            <Row>\r\n                <MiddleCell>\r\n                    Date of Joining\r\n                </MiddleCell>\r\n                <MiddleCell>\r\n                    {dateOfJoining}\r\n                </MiddleCell>\r\n                <MiddleCell>\r\n                    Days Month\r\n                </MiddleCell>\r\n                <MiddleCell>\r\n                    {daysMonth}\r\n                </MiddleCell>\r\n            </Row>\r\n            <Row>\r\n                <MiddleCell>\r\n                    Date of Seperation\r\n                </MiddleCell>\r\n                <MiddleCell>\r\n                    {dateOfSeperation}\r\n                </MiddleCell>\r\n                <MiddleCell>\r\n                    Days Payable\r\n                </MiddleCell>\r\n                <MiddleCell>\r\n                    {daysPayable}\r\n                </MiddleCell>\r\n            </Row>\r\n        </FlexVertical>\r\n    )\r\n}\r\n\r\nexport default DaysInfo\r\n","import React from 'react'\r\nimport { FlexVertical } from './layouts'\r\nimport { TopCell, MiddleCell, Row } from './tableComponents'\r\n\r\nfunction EmployeeInfo({ companyPan, employeeId, monthlyGross, monthlyBasic }) {\r\n    return (\r\n        <FlexVertical>\r\n            <Row>\r\n                <TopCell>Company PAN</TopCell>\r\n                <TopCell>{companyPan}</TopCell>\r\n                <TopCell>Monthly Gross</TopCell>\r\n                <TopCell>{monthlyGross}</TopCell>\r\n            </Row>\r\n            <Row>\r\n                <MiddleCell>Employee ID</MiddleCell>\r\n                <MiddleCell>{employeeId}</MiddleCell>\r\n                <MiddleCell>Monthly Basic</MiddleCell>\r\n                <MiddleCell>{monthlyBasic}</MiddleCell>\r\n            </Row>\r\n        </FlexVertical>\r\n    )\r\n}\r\n\r\nexport default EmployeeInfo\r\n","import React from 'react'\r\nimport { Row, Cell, BoldCell } from \"./tableComponents\"\r\n\r\nfunction EmployeeName({ employeeName }) {\r\n    return (\r\n        <Row>\r\n            <BoldCell>Name of Employee</BoldCell>\r\n            <Cell style={{ flexGrow: '1' }}>{employeeName}</Cell>\r\n        </Row>\r\n    )\r\n}\r\n\r\nexport default EmployeeName\r\n","import React from 'react'\r\nimport { FlexVertical } from './layouts'\r\nimport { Row, EmptyCell, BoldCell } from './tableComponents'\r\n\r\nfunction NetPayable({ netPayable, netPayableInWords }) {\r\n    return (\r\n        <FlexVertical>\r\n            <Row>\r\n                <BoldCell>Net Payable</BoldCell>\r\n                <BoldCell style={{ flexGrow: '1' }}>{netPayable}</BoldCell>\r\n            </Row>\r\n            <Row>\r\n                <EmptyCell style={{ alignSelf: 'flex-stretch' }}></EmptyCell>\r\n                <BoldCell style={{ flexGrow: '1' }}>{netPayableInWords}</BoldCell>\r\n            </Row>\r\n        </FlexVertical>\r\n    )\r\n}\r\n\r\nexport default NetPayable\r\n","import React from 'react'\r\nimport { Row, Cell } from './tableComponents'\r\n\r\nfunction Note({ netPayable, netPayableInWords }) {\r\n    return (\r\n        <Row>\r\n            <Cell>NOTE</Cell>\r\n            <Cell style={{ flexGrow: '1' }}>TDS calculations are based on Employee’s Self Declaration of Investments.\r\nAll Figures in INR.</Cell>\r\n        </Row>\r\n    )\r\n}\r\n\r\nexport default Note","import React from 'react'\r\nimport { Row, BottomCell, TopCell, MiddleCell, EmptyMiddleCell, EmptyBottomCell, Cell } from './tableComponents'\r\nimport { FlexVertical } from './layouts'\r\n\r\nfunction SalaryBreakDown({ basic, incomeTax, conveyanceAllowance, arrears, incentive, totalEarnings, totalDeductions, netPayable, netPayableInWords }) {\r\n    return (\r\n        <FlexVertical>\r\n            <Row>\r\n                <Cell>Earning Head</Cell>\r\n                <Cell>Currently Monthly Earnings</Cell>\r\n                <Cell>Deduction Head</Cell>\r\n                <Cell>{\"Currently Monthly \\nDeductions\"}</Cell>\r\n            </Row>\r\n            <Row>\r\n                <TopCell>Basic</TopCell>\r\n                <TopCell>{basic}</TopCell>\r\n                <TopCell>Income Tax (TDS)</TopCell>\r\n                <TopCell>{incomeTax}</TopCell>\r\n            </Row>\r\n            <Row>\r\n                <MiddleCell>Conveyance Allowance</MiddleCell>\r\n                <MiddleCell>{conveyanceAllowance}</MiddleCell>\r\n                <MiddleCell>Arrears</MiddleCell>\r\n                <MiddleCell>{arrears}</MiddleCell>\r\n            </Row>\r\n            <Row>\r\n                <MiddleCell>Incentive</MiddleCell>\r\n                <MiddleCell>{incentive}</MiddleCell>\r\n                <MiddleCell />\r\n                <MiddleCell />\r\n            </Row>\r\n            <Row>\r\n                <EmptyMiddleCell />\r\n                <EmptyMiddleCell />\r\n                <EmptyMiddleCell />\r\n                <EmptyMiddleCell />\r\n            </Row>\r\n            <Row>\r\n                <EmptyBottomCell />\r\n                <EmptyBottomCell />\r\n                <EmptyBottomCell />\r\n                <EmptyBottomCell />\r\n            </Row>\r\n        </FlexVertical>\r\n    )\r\n}\r\n\r\nexport default SalaryBreakDown\r\n","import React from 'react'\r\nimport { BoldCell, Cell, EmptyCell, Row } from './tableComponents'\r\n\r\nfunction Total({ totalEarnings, totalDeductions }) {\r\n    return (\r\n        <Row>\r\n            <BoldCell>Total</BoldCell>\r\n            <Cell>{totalEarnings}</Cell>\r\n            <EmptyCell />\r\n            <Cell>{totalDeductions}</Cell>\r\n        </Row>\r\n    )\r\n}\r\n\r\nexport default Total\r\n","import React from 'react'\r\nimport BankInfo from './BankInfo'\r\nimport DaysInfo from './DaysInfo'\r\nimport EmployeeInfo from './EmployeeInfo'\r\nimport EmployeeName from './EmployeeName'\r\nimport LeaveBalance from './LeaveBalance'\r\nimport NetPayable from './NetPayable'\r\nimport Note from './Note'\r\nimport SalaryBreakDown from './SalaryBreakDown'\r\nimport { TableBorder, Row, EmptyCell } from \"./tableComponents\"\r\nimport Total from './Total'\r\n\r\nfunction SalarySlipTable({ data }) {\r\n    return (\r\n        <TableBorder>\r\n            <EmployeeName employeeName={data.employeeName} />\r\n            <EmployeeInfo\r\n                companyPan={data.companyPan}\r\n                employeeId={data.employeeId}\r\n                monthlyGross={data.monthlyGross}\r\n                monthlyBasic={data.monthlyBasic}\r\n            />\r\n            <DaysInfo\r\n                dateOfJoining={data.dateOfJoining}\r\n                dateOfSeperation={data.dateOfSeperation}\r\n                daysMonth={data.daysMonth}\r\n                daysPayable={data.daysPayable}\r\n            />\r\n            <BankInfo\r\n                bankName={data.bankName}\r\n                bankAccountNo={data.bankAccountNo}\r\n                pan={data.pan}\r\n            />\r\n            <Row>\r\n                <EmptyCell style={{ flexGrow: '1' }} />\r\n            </Row>\r\n            <SalaryBreakDown\r\n                basic={data.basic}\r\n                conveyanceAllowance={data.conveyanceAllowance}\r\n                incentive={data.incentive}\r\n                incomeTax={data.incomeTax}\r\n                arrears={data.arrears}\r\n            />\r\n            <Total\r\n                totalEarnings={data.totalEarnings}\r\n                totalDeductions={data.totalDeductions}\r\n            />\r\n            <NetPayable\r\n                netPayable={data.netPayable}\r\n                netPayableInWords={data.netPayableInWords}\r\n            />\r\n            <Note />\r\n        </TableBorder>\r\n    )\r\n}\r\n\r\nexport default SalarySlipTable\r\n","import { Document, Page } from '@react-pdf/renderer'\r\nimport React from 'react'\r\nimport Header from './Header'\r\nimport { Border } from './layouts'\r\nimport SalarySlipTable from './SalarySlipTable'\r\n\r\nfunction SalarySlipPdf({ data }) {\r\n    return (\r\n        <Document>\r\n            <Page style={{ margin: '0px', paddingBottom: '24pt', paddingTop: '24pt', paddingLeft: '24pt', paddingRight: '24pt' }}>\r\n                <Border>\r\n                    <Header\r\n                        companyName=\"EDigital Wolf\"\r\n                        addressLine1=\"Shri Siddhi Above SBI Bank, Sasane Nagar \"\r\n                        addressLine2=\"Hadapsar, Pune\"\r\n                        addressLine3=\"Maharashtra 411028\"\r\n                        date={data.date}\r\n                    />\r\n                    <SalarySlipTable data={data} />\r\n                </Border>\r\n            </Page>\r\n        </Document>\r\n    )\r\n}\r\n\r\nexport default SalarySlipPdf\r\n","import { Box, Card, CircularProgress, Dialog, IconButton, Paper } from '@material-ui/core'\r\nimport React, { Fragment } from 'react'\r\nimport wordLogo from '../assets/word.svg'\r\nimport pdfLogo from '../assets/pdf.svg'\r\nimport generateDoc from '../generateDoc'\r\nimport { format } from 'date-fns';\r\nimport convert from '../convertToWords';\r\nimport { PDFDownloadLink } from '@react-pdf/renderer'\r\nimport { reset } from '../actions'\r\nimport { db } from '../firebase'\r\nimport SalarySlipPdf from '../pdftemplate/SalarySlipPdf'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { Close } from '@material-ui/icons'\r\n\r\nfunction DownloadPayslipDialog({ open }) {\r\n\r\n    const data = useSelector(state => {\r\n        console.log(state);\r\n        const basic = (parseFloat(state.basic) || 0);\r\n        const conveyanceAllowance = (parseFloat(state.conveyanceAllowance) || 0);\r\n        const incentive = (parseFloat(state.incentive) || 0);\r\n        const incomeTax = (parseFloat(state.incomeTax) || 0);\r\n        const arrears = (parseFloat(state.arrears) || 0);\r\n        const totalEarnings = basic + conveyanceAllowance + incentive;\r\n        const totalDeductions = incomeTax + arrears;\r\n        const netPayable = totalEarnings - totalDeductions\r\n        return ({\r\n            dateObject: state.date,\r\n            date: format(state.date, \"MMM yyyy\"),\r\n            employeeName: state.employeeName,\r\n            companyPan: state.companyPan,\r\n            monthlyGross: (parseFloat(state.monthlyGross) || 0).toFixed(2),\r\n            employeeId: state.employeeId,\r\n            monthlyBasic: (parseFloat(state.monthlyBasic) || 0).toFixed(2),\r\n            dateOfJoining: format(state.dateOfJoining, \"dd MMM yyyy\"),\r\n            daysMonth: state.daysMonth,\r\n            dateOfSeperation: state.hasSeperated ? format(state.dateOfSeperation, \"dd MMM yyyy\") : \"N/A\",\r\n            daysPayable: state.daysPayable,\r\n            bankName: state.bankName,\r\n            pan: state.pan,\r\n            bankAccountNo: state.bankAccountNo,\r\n            basic: basic.toFixed(2),\r\n            incomeTax: incomeTax.toFixed(2),\r\n            conveyanceAllowance: conveyanceAllowance.toFixed(2),\r\n            arrears: arrears.toFixed(2),\r\n            incentive: incentive.toFixed(2),\r\n            totalEarnings: totalEarnings.toFixed(2),\r\n            totalDeductions: totalDeductions.toFixed(2),\r\n            netPayable: `${netPayable.toFixed(2)}`,\r\n            netPayableInWords: `Rupees ${convert(netPayable)} Only`,\r\n            fileName: `Salary_Slip_${state.employeeId}_${format(state.date, \"MMM_yyyy\")}`\r\n        })\r\n    })\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    const saveToFirebase = () => {\r\n        db.collection(\"employeeIds\").doc(data.employeeId).set({\r\n            pan: data.pan,\r\n            employeeName: data.employeeName,\r\n            bankName: data.bankName,\r\n            bankAccountNo: data.bankAccountNo,\r\n            dateOfJoining: data.dateOfJoining,\r\n            dateOfSeperation: data.dateOfSeperation,\r\n            monthlyGross: data.monthlyGross,\r\n            monthlyBasic: data.monthlyBasic,\r\n            basic: data.basic,\r\n            conveyanceAllowance: data.conveyanceAllowance,\r\n            incentive: data.incentive,\r\n            incomeTax: data.incomeTax,\r\n            arrears: data.arrears\r\n        }).then(() => {\r\n            console.log(\"Document Written successfully\");\r\n        }).catch((error) => {\r\n            console.log(\"Error while writing document\");\r\n        });\r\n    }\r\n\r\n    return (\r\n        <Dialog open={open}>\r\n            <Paper style={{ backgroundColor: \"#e9e9e9\" }}>\r\n                <IconButton onClick={(e) => {\r\n                    dispatch(reset());\r\n                }} style={{ position: 'absolute', right: '10px', top: '10px' }}>\r\n                    <Close style={{ color: '#000' }} />\r\n                </IconButton>\r\n                <Box style={{ fontWeight: 'bold', gap: '50px', paddingTop: '20px', paddingLeft: '50px', paddingRight: '50px', paddingBottom: '40px' }}>\r\n                    <Box style={{ display: 'flex', flexDirection: 'column', gap: '10px' }}>\r\n                        <p>Download Payslip</p>\r\n                        <Box style={{ display: 'flex', flexDirection: 'row', gap: '50px' }}>\r\n                            <Card style={{ padding: \"20px\" }}>\r\n                                <PDFDownloadLink\r\n                                    document={<SalarySlipPdf data={data} />}\r\n                                    fileName={data.fileName}\r\n\r\n                                    style={{\r\n                                        textDecoration: \"none\",\r\n                                        color: \"#4a4a4a\",\r\n                                        display: \"flex\",\r\n                                        alignItems: 'center',\r\n                                        justifyContent: 'center',\r\n                                        backgroundColor: \"#fff\",\r\n                                    }}>{({ blob, url, loading, error }) => {\r\n                                        if (!loading) {\r\n                                            saveToFirebase()\r\n                                        }\r\n                                        return (<Fragment>\r\n                                            <img src={pdfLogo} style={{ width: \"64px\", height: \"64px\" }} alt=\"Word\" />\r\n                                            {loading && <CircularProgress style={{ position: 'absolute' }} />}\r\n                                        </Fragment>\r\n                                        )\r\n                                    }\r\n                                    }\r\n                                </PDFDownloadLink>\r\n                            </Card>\r\n                            <Card style={{ padding: \"20px\", margin: \"0px\" }} onClick={(e) => {\r\n                                saveToFirebase();\r\n                                generateDoc(data);\r\n                            }}>\r\n                                <img src={wordLogo} style={{ width: \"64px\", height: \"64px\", padding: \"0px\" }} alt=\"Pdf\" />\r\n                            </Card>\r\n                        </Box>\r\n                    </Box>\r\n                </Box>\r\n\r\n            </Paper>\r\n        </Dialog>\r\n    )\r\n}\r\n\r\nexport default DownloadPayslipDialog\r\n","import './App.css';\nimport React, { Fragment, useEffect, useLayoutEffect, useRef, useState } from 'react';\nimport 'date-fns';\nimport EmployeeInfo from './components/EmployeeInfo';\nimport Header from './components/Header';\nimport PaymentInfo from './components/PaymentInfo';\nimport SalaryBreakdown from './components/SalaryBreakdown';\nimport Total from './components/Total';\nimport NavBar from './components/NavBar';\nimport { makeStyles, useMediaQuery } from '@material-ui/core';\nimport Fab from '@material-ui/core/Fab'\nimport onSaveClick from './save';\nimport { db } from './firebase';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { updateEmployeeIds } from './actions';\nimport GetApp from '@material-ui/icons/GetApp';\nimport DownloadPayslipDialog from './components/DownloadPayslipDialog';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    '& > *': {\n      margin: theme.spacing(1),\n    },\n  },\n  extendedIcon: {\n    marginRight: theme.spacing(1),\n  },\n}));\n\nfunction App() {\n\n  const classes = useStyles();\n\n  let prevScrollPos = useRef(0)\n  const [visible, setVisible] = useState(true);\n\n  const isMobile = useMediaQuery(\"(max-width: 500px)\")\n\n  const dispatch = useDispatch();\n\n  const getEmployeeIds = () => {\n    db.collection(\"employeeIds\").onSnapshot((snapshot) => {\n      const ids = snapshot.docs.map((doc) => ({\n        id: doc.id,\n        data: doc.data()\n      }));\n      dispatch(updateEmployeeIds(ids));\n    })\n  }\n\n  useEffect(() => {\n    getEmployeeIds();\n  }, [])\n\n  useLayoutEffect(() => {\n    const handleScroll = () => {\n      const current = window.pageYOffset;\n      setVisible(prevScrollPos.current > current);\n      prevScrollPos.current = current;\n    }\n    window.addEventListener(\"scroll\", handleScroll);\n    return () => {\n      window.removeEventListener(\"scroll\", handleScroll);\n    }\n  }, [])\n\n  const open = useSelector(state => state.saving);\n\n  return (\n    <Fragment>\n      <div className=\"App\">\n        <NavBar visible={visible} isMobile={isMobile} classes={classes} onSaveClick={onSaveClick} />\n        <div className=\"Container\">\n          <Header />\n          <EmployeeInfo />\n          <PaymentInfo />\n          <SalaryBreakdown />\n          <Total />\n          {\n            isMobile && <Fab onClick={onSaveClick}\n              style={{ position: \"fixed\", bottom: \"20px\", zIndex: \"10\", right: \"20px\", transition: \"transform 300ms\", transform: visible ? \"translateY(0%)\" : \"translateY(150%)\" }} color=\"primary\" variant=\"extended\">\n              <GetApp className={classes.extendedIcon} />  Download Payslip\n            </Fab>\n          }\n\n          {\n            open && <DownloadPayslipDialog open={open} />\n          }\n        </div>\n      </div>\n    </Fragment>\n\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport { Provider } from 'react-redux';\nimport store from './store';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}